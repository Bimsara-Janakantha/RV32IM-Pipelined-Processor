$date
	Tue Feb 04 23:25:50 2025
$end
$version
	GTKWave Analyzer v3.3.100 (w)1999-2019 BSI
$end
$timescale
	1fs
$end
$scope module top $end
$scope module cputb $end
$var wire 1 2# reset $end
$var wire 1 ># pc[20] $end
$var wire 1 B# pc[16] $end
$var wire 1 ;# pc[23] $end
$var wire 1 =# pc[21] $end
$var wire 1 9# pc[25] $end
$var wire 1 3# pc[31] $end
$var wire 1 <# pc[22] $end
$var wire 1 4# pc[30] $end
$var wire 1 ,! clk $end
$var wire 1 ?# pc[19] $end
$var wire 1 @# pc[18] $end
$var wire 1 7# pc[27] $end
$var wire 1 A# pc[17] $end
$var wire 1 5# pc[29] $end
$var wire 1 8# pc[26] $end
$var wire 1 6# pc[28] $end
$var wire 1 :# pc[24] $end
$var wire 1 O# pc[3] $end
$var wire 1 ]# instruction[21] $end
$var wire 1 G# pc[11] $end
$var wire 1 F# pc[12] $end
$var wire 1 I# pc[9] $end
$var wire 1 K# pc[7] $end
$var wire 1 M# pc[5] $end
$var wire 1 X# instruction[26] $end
$var wire 1 L# pc[6] $end
$var wire 1 J# pc[8] $end
$var wire 1 P# pc[2] $end
$var wire 1 V# instruction[28] $end
$var wire 1 Y# instruction[25] $end
$var wire 1 Z# instruction[24] $end
$var wire 1 _# instruction[19] $end
$var wire 1 H# pc[10] $end
$var wire 1 Q# pc[1] $end
$var wire 1 D# pc[14] $end
$var wire 1 a# instruction[17] $end
$var wire 1 c# instruction[15] $end
$var wire 1 N# pc[4] $end
$var wire 1 d# instruction[14] $end
$var wire 1 E# pc[13] $end
$var wire 1 f# instruction[12] $end
$var wire 1 g# instruction[11] $end
$var wire 1 T# instruction[30] $end
$var wire 1 i# instruction[9] $end
$var wire 1 R# pc[0] $end
$var wire 1 C# pc[15] $end
$var wire 1 j# instruction[8] $end
$var wire 1 U# instruction[29] $end
$var wire 1 \# instruction[22] $end
$var wire 1 ^# instruction[20] $end
$var wire 1 b# instruction[16] $end
$var wire 1 W# instruction[27] $end
$var wire 1 [# instruction[23] $end
$var wire 1 S# instruction[31] $end
$var wire 1 `# instruction[18] $end
$var wire 1 e# instruction[13] $end
$var wire 1 h# instruction[10] $end
$var wire 1 k# instruction[7] $end
$var wire 1 r# instruction[0] $end
$var wire 1 p# instruction[2] $end
$var wire 1 o# instruction[3] $end
$var wire 1 l# instruction[6] $end
$var wire 1 m# instruction[5] $end
$var wire 1 q# instruction[1] $end
$var wire 1 n# instruction[4] $end
$scope module rv_cpu $end
$var wire 1 z$ imm_id[26] $end
$var wire 1 |$ imm_id[24] $end
$var wire 1 -% imm_id[9] $end
$var wire 1 (% imm_id[14] $end
$var wire 1 +% imm_id[11] $end
$var wire 1 w$ imm_id[29] $end
$var wire 1 x$ imm_id[28] $end
$var wire 1 /% imm_id[7] $end
$var wire 1 $% imm_id[18] $end
$var wire 1 *% imm_id[12] $end
$var wire 1 '% imm_id[15] $end
$var wire 1 ,% imm_id[10] $end
$var wire 1 5% imm_id[1] $end
$var wire 1 .% imm_id[8] $end
$var wire 1 %% imm_id[17] $end
$var wire 1 }$ imm_id[23] $end
$var wire 1 u$ imm_id[31] $end
$var wire 1 v$ imm_id[30] $end
$var wire 1 !% imm_id[21] $end
$var wire 1 {$ imm_id[25] $end
$var wire 1 &% imm_id[16] $end
$var wire 1 y$ imm_id[27] $end
$var wire 1 1% imm_id[5] $end
$var wire 1 4% imm_id[2] $end
$var wire 1 ~$ imm_id[22] $end
$var wire 1 "% imm_id[20] $end
$var wire 1 #% imm_id[19] $end
$var wire 1 2% imm_id[4] $end
$var wire 1 )% imm_id[13] $end
$var wire 1 0% imm_id[6] $end
$var wire 1 3% imm_id[3] $end
$var wire 1 6% imm_id[0] $end
$scope module rv_regfile $end
$var wire 1 |" registers[5] [18] $end
$var wire 1 ~" registers[5] [16] $end
$var wire 1 Y" registers[4] [21] $end
$var wire 1 h" registers[4] [6] $end
$var wire 1 C" registers[3] [11] $end
$var wire 1 s" registers[5] [27] $end
$var wire 1 T" registers[4] [26] $end
$var wire 1 v" registers[5] [24] $end
$var wire 1 z" registers[5] [20] $end
$var wire 1 W" registers[4] [23] $end
$var wire 1 }" registers[5] [17] $end
$var wire 1 t" registers[5] [26] $end
$var wire 1 !# registers[5] [15] $end
$var wire 1 j" registers[4] [4] $end
$var wire 1 i" registers[4] [5] $end
$var wire 1 "# registers[5] [14] $end
$var wire 1 [" registers[4] [19] $end
$var wire 1 l" registers[4] [2] $end
$var wire 1 ## registers[5] [13] $end
$var wire 1 $# registers[5] [12] $end
$var wire 1 P" registers[4] [30] $end
$var wire 1 V" registers[4] [24] $end
$var wire 1 a" registers[4] [13] $end
$var wire 1 n" registers[4] [0] $end
$var wire 1 S" registers[4] [27] $end
$var wire 1 G" registers[3] [7] $end
$var wire 1 X" registers[4] [22] $end
$var wire 1 o" registers[5] [31] $end
$var wire 1 k" registers[4] [3] $end
$var wire 1 r" registers[5] [28] $end
$var wire 1 Z" registers[4] [20] $end
$var wire 1 f" registers[4] [8] $end
$var wire 1 Q" registers[4] [29] $end
$var wire 1 K" registers[3] [3] $end
$var wire 1 u" registers[5] [25] $end
$var wire 1 m" registers[4] [1] $end
$var wire 1 c" registers[4] [11] $end
$var wire 1 w" registers[5] [23] $end
$var wire 1 e" registers[4] [9] $end
$var wire 1 D" registers[3] [10] $end
$var wire 1 F" registers[3] [8] $end
$var wire 1 g" registers[4] [7] $end
$var wire 1 M" registers[3] [1] $end
$var wire 1 I" registers[3] [5] $end
$var wire 1 R" registers[4] [28] $end
$var wire 1 d" registers[4] [10] $end
$var wire 1 ]" registers[4] [17] $end
$var wire 1 p" registers[5] [30] $end
$var wire 1 q" registers[5] [29] $end
$var wire 1 `" registers[4] [14] $end
$var wire 1 x" registers[5] [22] $end
$var wire 1 L" registers[3] [2] $end
$var wire 1 N" registers[3] [0] $end
$var wire 1 O" registers[4] [31] $end
$var wire 1 ^" registers[4] [16] $end
$var wire 1 U" registers[4] [25] $end
$var wire 1 \" registers[4] [18] $end
$var wire 1 E" registers[3] [9] $end
$var wire 1 _" registers[4] [15] $end
$var wire 1 b" registers[4] [12] $end
$var wire 1 y" registers[5] [21] $end
$var wire 1 {" registers[5] [19] $end
$var wire 1 H" registers[3] [6] $end
$var wire 1 J" registers[3] [4] $end
$var wire 1 *# registers[5] [6] $end
$var wire 1 +# registers[5] [5] $end
$var wire 1 (# registers[5] [8] $end
$var wire 1 '# registers[5] [9] $end
$var wire 1 %# registers[5] [11] $end
$var wire 1 0# registers[5] [0] $end
$var wire 1 .# registers[5] [2] $end
$var wire 1 /# registers[5] [1] $end
$var wire 1 &# registers[5] [10] $end
$var wire 1 )# registers[5] [7] $end
$var wire 1 ,# registers[5] [4] $end
$var wire 1 -# registers[5] [3] $end
$var wire 1 g! registers[1] [5] $end
$var wire 1 y! registers[2] [19] $end
$var wire 1 o! registers[2] [29] $end
$var wire 1 k! registers[1] [1] $end
$var wire 1 x! registers[2] [20] $end
$var wire 1 q! registers[2] [27] $end
$var wire 1 !" registers[2] [13] $end
$var wire 1 $" registers[2] [10] $end
$var wire 1 8" registers[3] [22] $end
$var wire 1 9" registers[3] [21] $end
$var wire 1 )" registers[2] [5] $end
$var wire 1 :" registers[3] [20] $end
$var wire 1 ;" registers[3] [19] $end
$var wire 1 <" registers[3] [18] $end
$var wire 1 /" registers[3] [31] $end
$var wire 1 }! registers[2] [15] $end
$var wire 1 =" registers[3] [17] $end
$var wire 1 2" registers[3] [28] $end
$var wire 1 n! registers[2] [30] $end
$var wire 1 (" registers[2] [6] $end
$var wire 1 4" registers[3] [26] $end
$var wire 1 6" registers[3] [24] $end
$var wire 1 t! registers[2] [24] $end
$var wire 1 i! registers[1] [3] $end
$var wire 1 w! registers[2] [21] $end
$var wire 1 b! registers[1] [10] $end
$var wire 1 +" registers[2] [3] $end
$var wire 1 ." registers[2] [0] $end
$var wire 1 #" registers[2] [11] $end
$var wire 1 f! registers[1] [6] $end
$var wire 1 {! registers[2] [17] $end
$var wire 1 >" registers[3] [16] $end
$var wire 1 ?" registers[3] [15] $end
$var wire 1 p! registers[2] [28] $end
$var wire 1 @" registers[3] [14] $end
$var wire 1 c! registers[1] [9] $end
$var wire 1 -" registers[2] [1] $end
$var wire 1 A" registers[3] [13] $end
$var wire 1 e! registers[1] [7] $end
$var wire 1 "" registers[2] [12] $end
$var wire 1 B" registers[3] [12] $end
$var wire 1 1" registers[3] [29] $end
$var wire 1 h! registers[1] [4] $end
$var wire 1 j! registers[1] [2] $end
$var wire 1 m! registers[2] [31] $end
$var wire 1 d! registers[1] [8] $end
$var wire 1 r! registers[2] [26] $end
$var wire 1 v! registers[2] [22] $end
$var wire 1 z! registers[2] [18] $end
$var wire 1 l! registers[1] [0] $end
$var wire 1 a! registers[1] [11] $end
$var wire 1 u! registers[2] [23] $end
$var wire 1 |! registers[2] [16] $end
$var wire 1 ~! registers[2] [14] $end
$var wire 1 %" registers[2] [9] $end
$var wire 1 &" registers[2] [8] $end
$var wire 1 *" registers[2] [4] $end
$var wire 1 s! registers[2] [25] $end
$var wire 1 '" registers[2] [7] $end
$var wire 1 ," registers[2] [2] $end
$var wire 1 0" registers[3] [30] $end
$var wire 1 5" registers[3] [25] $end
$var wire 1 3" registers[3] [27] $end
$var wire 1 7" registers[3] [23] $end
$upscope $end
$var wire 1 X$ readdata_1_ex[28] $end
$var wire 1 =$ readdata_2_ex[23] $end
$var wire 1 o$ readdata_1_ex[5] $end
$var wire 1 s$ readdata_1_ex[1] $end
$var wire 1 5$ readdata_2_ex[31] $end
$var wire 1 <$ readdata_2_ex[24] $end
$var wire 1 Y$ readdata_1_ex[27] $end
$var wire 1 f$ readdata_1_ex[14] $end
$var wire 1 k$ readdata_1_ex[9] $end
$var wire 1 V$ readdata_1_ex[30] $end
$var wire 1 C$ readdata_2_ex[17] $end
$var wire 1 F$ readdata_2_ex[14] $end
$var wire 1 Z$ readdata_1_ex[26] $end
$var wire 1 A$ readdata_2_ex[19] $end
$var wire 1 ]$ readdata_1_ex[23] $end
$var wire 1 \$ readdata_1_ex[24] $end
$var wire 1 r$ readdata_1_ex[2] $end
$var wire 1 j$ readdata_1_ex[10] $end
$var wire 1 _$ readdata_1_ex[21] $end
$var wire 1 e$ readdata_1_ex[15] $end
$var wire 1 W$ readdata_1_ex[29] $end
$var wire 1 i$ readdata_1_ex[11] $end
$var wire 1 h$ readdata_1_ex[12] $end
$var wire 1 m$ readdata_1_ex[7] $end
$var wire 1 ^$ readdata_1_ex[22] $end
$var wire 1 g$ readdata_1_ex[13] $end
$var wire 1 8$ readdata_2_ex[28] $end
$var wire 1 t$ readdata_1_ex[0] $end
$var wire 1 ;$ readdata_2_ex[25] $end
$var wire 1 ?$ readdata_2_ex[21] $end
$var wire 1 E$ readdata_2_ex[15] $end
$var wire 1 [$ readdata_1_ex[25] $end
$var wire 1 D$ readdata_2_ex[16] $end
$var wire 1 I$ readdata_2_ex[11] $end
$var wire 1 l$ readdata_1_ex[8] $end
$var wire 1 n$ readdata_1_ex[6] $end
$var wire 1 q$ readdata_1_ex[3] $end
$var wire 1 6$ readdata_2_ex[30] $end
$var wire 1 :$ readdata_2_ex[26] $end
$var wire 1 >$ readdata_2_ex[22] $end
$var wire 1 @$ readdata_2_ex[20] $end
$var wire 1 a$ readdata_1_ex[19] $end
$var wire 1 d$ readdata_1_ex[16] $end
$var wire 1 p$ readdata_1_ex[4] $end
$var wire 1 9$ readdata_2_ex[27] $end
$var wire 1 U$ readdata_1_ex[31] $end
$var wire 1 B$ readdata_2_ex[18] $end
$var wire 1 G$ readdata_2_ex[13] $end
$var wire 1 7$ readdata_2_ex[29] $end
$var wire 1 c$ readdata_1_ex[17] $end
$var wire 1 H$ readdata_2_ex[12] $end
$var wire 1 b$ readdata_1_ex[18] $end
$var wire 1 `$ readdata_1_ex[20] $end
$var wire 1 =% data1_ex[25] $end
$var wire 1 B% data1_ex[20] $end
$var wire 1 K% data1_ex[11] $end
$var wire 1 M% data1_ex[9] $end
$var wire 1 \% data2_ex[26] $end
$var wire 1 c% data2_ex[19] $end
$var wire 1 9% data1_ex[29] $end
$var wire 1 ;% data1_ex[27] $end
$var wire 1 C% data1_ex[19] $end
$var wire 1 W% data2_ex[31] $end
$var wire 1 Z% data2_ex[28] $end
$var wire 1 D% data1_ex[18] $end
$var wire 1 H% data1_ex[14] $end
$var wire 1 e% data2_ex[17] $end
$var wire 1 O$ readdata_2_ex[5] $end
$var wire 1 I% data1_ex[13] $end
$var wire 1 ^% data2_ex[24] $end
$var wire 1 R$ readdata_2_ex[2] $end
$var wire 1 g% data2_ex[15] $end
$var wire 1 J$ readdata_2_ex[10] $end
$var wire 1 7% data1_ex[31] $end
$var wire 1 S% data1_ex[3] $end
$var wire 1 L$ readdata_2_ex[8] $end
$var wire 1 N$ readdata_2_ex[6] $end
$var wire 1 A% data1_ex[21] $end
$var wire 1 E% data1_ex[17] $end
$var wire 1 V% data1_ex[0] $end
$var wire 1 Y% data2_ex[29] $end
$var wire 1 [% data2_ex[27] $end
$var wire 1 d% data2_ex[18] $end
$var wire 1 ]% data2_ex[25] $end
$var wire 1 i% data2_ex[13] $end
$var wire 1 T% data1_ex[2] $end
$var wire 1 N% data1_ex[8] $end
$var wire 1 F% data1_ex[16] $end
$var wire 1 k% data2_ex[11] $end
$var wire 1 M$ readdata_2_ex[7] $end
$var wire 1 f% data2_ex[16] $end
$var wire 1 G% data1_ex[15] $end
$var wire 1 h% data2_ex[14] $end
$var wire 1 j% data2_ex[12] $end
$var wire 1 Q$ readdata_2_ex[3] $end
$var wire 1 P% data1_ex[6] $end
$var wire 1 T$ readdata_2_ex[0] $end
$var wire 1 K$ readdata_2_ex[9] $end
$var wire 1 ?% data1_ex[23] $end
$var wire 1 L% data1_ex[10] $end
$var wire 1 :% data1_ex[28] $end
$var wire 1 J% data1_ex[12] $end
$var wire 1 U% data1_ex[1] $end
$var wire 1 `% data2_ex[22] $end
$var wire 1 O% data1_ex[7] $end
$var wire 1 Q% data1_ex[5] $end
$var wire 1 R% data1_ex[4] $end
$var wire 1 P$ readdata_2_ex[4] $end
$var wire 1 X% data2_ex[30] $end
$var wire 1 _% data2_ex[23] $end
$var wire 1 >% data1_ex[24] $end
$var wire 1 <% data1_ex[26] $end
$var wire 1 a% data2_ex[21] $end
$var wire 1 @% data1_ex[22] $end
$var wire 1 b% data2_ex[20] $end
$var wire 1 S$ readdata_2_ex[1] $end
$var wire 1 8% data1_ex[30] $end
$var wire 1 -& aluresult_ex[15] $end
$var wire 1 <& aluresult_ex[0] $end
$var wire 1 "& aluresult_ex[26] $end
$var wire 1 5& aluresult_ex[7] $end
$var wire 1 .& aluresult_ex[14] $end
$var wire 1 s% data2_ex[3] $end
$var wire 1 v% data2_ex[0] $end
$var wire 1 /& aluresult_ex[13] $end
$var wire 1 8& aluresult_ex[4] $end
$var wire 1 :& aluresult_ex[2] $end
$var wire 1 F& mux3_out[22] $end
$var wire 1 t% data2_ex[2] $end
$var wire 1 +& aluresult_ex[17] $end
$var wire 1 9& aluresult_ex[3] $end
$var wire 1 l% data2_ex[10] $end
$var wire 1 6& aluresult_ex[6] $end
$var wire 1 =& mux3_out[31] $end
$var wire 1 D& mux3_out[24] $end
$var wire 1 G& mux3_out[21] $end
$var wire 1 *& aluresult_ex[18] $end
$var wire 1 && aluresult_ex[22] $end
$var wire 1 A& mux3_out[27] $end
$var wire 1 r% data2_ex[4] $end
$var wire 1 (& aluresult_ex[20] $end
$var wire 1 4& aluresult_ex[8] $end
$var wire 1 |% aluresult_ex[30] $end
$var wire 1 o% data2_ex[7] $end
$var wire 1 {% aluresult_ex[31] $end
$var wire 1 m% data2_ex[9] $end
$var wire 1 u% data2_ex[1] $end
$var wire 1 ~% aluresult_ex[28] $end
$var wire 1 '& aluresult_ex[21] $end
$var wire 1 2& aluresult_ex[10] $end
$var wire 1 ;& aluresult_ex[1] $end
$var wire 1 >& mux3_out[30] $end
$var wire 1 n% data2_ex[8] $end
$var wire 1 !& aluresult_ex[27] $end
$var wire 1 H& mux3_out[20] $end
$var wire 1 p% data2_ex[6] $end
$var wire 1 B& mux3_out[26] $end
$var wire 1 3& aluresult_ex[9] $end
$var wire 1 q% data2_ex[5] $end
$var wire 1 7& aluresult_ex[5] $end
$var wire 1 ?& mux3_out[29] $end
$var wire 1 K& mux3_out[17] $end
$var wire 1 L& mux3_out[16] $end
$var wire 1 )& aluresult_ex[19] $end
$var wire 1 ,& aluresult_ex[16] $end
$var wire 1 C& mux3_out[25] $end
$var wire 1 0& aluresult_ex[12] $end
$var wire 1 1& aluresult_ex[11] $end
$var wire 1 J& mux3_out[18] $end
$var wire 1 #& aluresult_ex[25] $end
$var wire 1 E& mux3_out[23] $end
$var wire 1 I& mux3_out[19] $end
$var wire 1 }% aluresult_ex[29] $end
$var wire 1 @& mux3_out[28] $end
$var wire 1 M& mux3_out[15] $end
$var wire 1 N& mux3_out[14] $end
$var wire 1 O& mux3_out[13] $end
$var wire 1 $& aluresult_ex[24] $end
$var wire 1 P& mux3_out[12] $end
$var wire 1 Q& mux3_out[11] $end
$var wire 1 %& aluresult_ex[23] $end
$var wire 1 U& mux3_out[7] $end
$var wire 1 S& mux3_out[9] $end
$var wire 1 \& mux3_out[0] $end
$var wire 1 w% aluop_ex[3] $end
$var wire 1 [& mux3_out[1] $end
$var wire 1 Y& mux3_out[3] $end
$var wire 1 y% aluop_ex[1] $end
$var wire 1 x% aluop_ex[2] $end
$var wire 1 W& mux3_out[5] $end
$var wire 1 X& mux3_out[4] $end
$var wire 1 V& mux3_out[6] $end
$var wire 1 R& mux3_out[10] $end
$var wire 1 Z& mux3_out[2] $end
$var wire 1 T& mux3_out[8] $end
$var wire 1 z% aluop_ex[0] $end
$var wire 1 .' aluresult_mem[16] $end
$var wire 1 "' aluresult_mem[28] $end
$var wire 1 /' aluresult_mem[15] $end
$var wire 1 0' aluresult_mem[14] $end
$var wire 1 4' aluresult_mem[10] $end
$var wire 1 5' aluresult_mem[9] $end
$var wire 1 '' aluresult_mem[23] $end
$var wire 1 %' aluresult_mem[25] $end
$var wire 1 &' aluresult_mem[24] $end
$var wire 1 1' aluresult_mem[13] $end
$var wire 1 -' aluresult_mem[17] $end
$var wire 1 :' aluresult_mem[4] $end
$var wire 1 2' aluresult_mem[12] $end
$var wire 1 }& aluresult_mem[31] $end
$var wire 1 $' aluresult_mem[26] $end
$var wire 1 *' aluresult_mem[20] $end
$var wire 1 !' aluresult_mem[29] $end
$var wire 1 ,' aluresult_mem[18] $end
$var wire 1 3' aluresult_mem[11] $end
$var wire 1 <' aluresult_mem[2] $end
$var wire 1 8' aluresult_mem[6] $end
$var wire 1 (' aluresult_mem[22] $end
$var wire 1 +' aluresult_mem[19] $end
$var wire 1 6' aluresult_mem[8] $end
$var wire 1 )' aluresult_mem[21] $end
$var wire 1 ;' aluresult_mem[3] $end
$var wire 1 =' aluresult_mem[1] $end
$var wire 1 >' aluresult_mem[0] $end
$var wire 1 ~& aluresult_mem[30] $end
$var wire 1 #' aluresult_mem[27] $end
$var wire 1 7' aluresult_mem[7] $end
$var wire 1 9' aluresult_mem[5] $end
$var wire 1 u& memout_mem[7] $end
$var wire 1 g& memout_mem[21] $end
$var wire 1 j& memout_mem[18] $end
$var wire 1 v& memout_mem[6] $end
$var wire 1 `& memout_mem[28] $end
$var wire 1 c& memout_mem[25] $end
$var wire 1 w& memout_mem[5] $end
$var wire 1 a& memout_mem[27] $end
$var wire 1 s& memout_mem[9] $end
$var wire 1 r& memout_mem[10] $end
$var wire 1 n& memout_mem[14] $end
$var wire 1 _& memout_mem[29] $end
$var wire 1 p& memout_mem[12] $end
$var wire 1 |& memout_mem[0] $end
$var wire 1 e& memout_mem[23] $end
$var wire 1 d& memout_mem[24] $end
$var wire 1 h& memout_mem[20] $end
$var wire 1 b& memout_mem[26] $end
$var wire 1 o& memout_mem[13] $end
$var wire 1 z& memout_mem[2] $end
$var wire 1 i& memout_mem[19] $end
$var wire 1 ]& memout_mem[31] $end
$var wire 1 {& memout_mem[1] $end
$var wire 1 ^& memout_mem[30] $end
$var wire 1 q& memout_mem[11] $end
$var wire 1 t& memout_mem[8] $end
$var wire 1 x& memout_mem[4] $end
$var wire 1 y& memout_mem[3] $end
$var wire 1 k& memout_mem[17] $end
$var wire 1 f& memout_mem[22] $end
$var wire 1 l& memout_mem[16] $end
$var wire 1 m& memout_mem[15] $end
$var wire 1 @' writedata_wb[30] $end
$var wire 1 J' writedata_wb[20] $end
$var wire 1 K' writedata_wb[19] $end
$var wire 1 P' writedata_wb[14] $end
$var wire 1 A' writedata_wb[29] $end
$var wire 1 B' writedata_wb[28] $end
$var wire 1 D' writedata_wb[26] $end
$var wire 1 E' writedata_wb[25] $end
$var wire 1 ?' writedata_wb[31] $end
$var wire 1 F' writedata_wb[24] $end
$var wire 1 C' writedata_wb[27] $end
$var wire 1 G' writedata_wb[23] $end
$var wire 1 M' writedata_wb[17] $end
$var wire 1 N' writedata_wb[16] $end
$var wire 1 O' writedata_wb[15] $end
$var wire 1 I' writedata_wb[21] $end
$var wire 1 L' writedata_wb[18] $end
$var wire 1 H' writedata_wb[22] $end
$var wire 1 %$ rs1[3] $end
$var wire 1 w# opcode[2] $end
$var wire 1 -$ rs2[0] $end
$var wire 1 )$ rs2[4] $end
$var wire 1 v# opcode[3] $end
$var wire 1 {# rd[3] $end
$var wire 1 1$ func7[3] $end
$var wire 1 T' writedata_wb[10] $end
$var wire 1 \' writedata_wb[2] $end
$var wire 1 4$ func7[0] $end
$scope module rv_regfile $end
$var wire 1 1! registers[0] [27] $end
$upscope $end
$var wire 1 U' writedata_wb[9] $end
$scope module rv_regfile $end
$var wire 1 3! registers[0] [25] $end
$var wire 1 4! registers[0] [24] $end
$var wire 1 5! registers[0] [23] $end
$upscope $end
$var wire 1 /$ func7[5] $end
$scope module rv_regfile $end
$var wire 1 6! registers[0] [22] $end
$var wire 1 7! registers[0] [21] $end
$upscope $end
$var wire 1 ,$ rs2[1] $end
$scope module rv_regfile $end
$var wire 1 0! registers[0] [28] $end
$upscope $end
$var wire 1 S' writedata_wb[11] $end
$var wire 1 '$ rs1[1] $end
$var wire 1 R' writedata_wb[12] $end
$var wire 1 ~# rd[0] $end
$var wire 1 Q' writedata_wb[13] $end
$var wire 1 Z' writedata_wb[4] $end
$var wire 1 $$ rs1[4] $end
$var wire 1 u# opcode[4] $end
$var wire 1 z# rd[4] $end
$var wire 1 y# opcode[0] $end
$var wire 1 W' writedata_wb[7] $end
$var wire 1 X' writedata_wb[6] $end
$var wire 1 ^' writedata_wb[0] $end
$var wire 1 [' writedata_wb[3] $end
$var wire 1 !$ func3[2] $end
$var wire 1 #$ func3[0] $end
$var wire 1 2$ func7[2] $end
$var wire 1 &$ rs1[2] $end
$var wire 1 ($ rs1[0] $end
$var wire 1 "$ func3[1] $end
$var wire 1 +$ rs2[2] $end
$var wire 1 |# rd[2] $end
$var wire 1 t# opcode[5] $end
$var wire 1 *$ rs2[3] $end
$var wire 1 V' writedata_wb[8] $end
$var wire 1 s# opcode[6] $end
$var wire 1 x# opcode[1] $end
$var wire 1 .$ func7[6] $end
$var wire 1 0$ func7[4] $end
$var wire 1 3$ func7[1] $end
$var wire 1 }# rd[1] $end
$scope module rv_regfile $end
$var wire 1 -! registers[0] [31] $end
$upscope $end
$var wire 1 Y' writedata_wb[5] $end
$var wire 1 ]' writedata_wb[1] $end
$scope module rv_regfile $end
$var wire 1 .! registers[0] [30] $end
$var wire 1 /! registers[0] [29] $end
$var wire 1 2! registers[0] [26] $end
$var wire 1 D! registers[0] [8] $end
$var wire 1 G! registers[0] [5] $end
$var wire 1 I! registers[0] [3] $end
$var wire 1 @! registers[0] [12] $end
$var wire 1 B! registers[0] [10] $end
$var wire 1 S! registers[1] [25] $end
$var wire 1 V! registers[1] [22] $end
$var wire 1 Z! registers[1] [18] $end
$var wire 1 _! registers[1] [13] $end
$var wire 1 K! registers[0] [1] $end
$var wire 1 :! registers[0] [18] $end
$var wire 1 <! registers[0] [16] $end
$var wire 1 >! registers[0] [14] $end
$var wire 1 Q! registers[1] [27] $end
$var wire 1 R! registers[1] [26] $end
$var wire 1 Y! registers[1] [19] $end
$var wire 1 H! registers[0] [4] $end
$var wire 1 `! registers[1] [12] $end
$var wire 1 P! registers[1] [28] $end
$var wire 1 J! registers[0] [2] $end
$var wire 1 ^! registers[1] [14] $end
$var wire 1 O! registers[1] [29] $end
$var wire 1 \! registers[1] [16] $end
$var wire 1 N! registers[1] [30] $end
$var wire 1 M! registers[1] [31] $end
$var wire 1 W! registers[1] [21] $end
$var wire 1 9! registers[0] [19] $end
$var wire 1 =! registers[0] [15] $end
$var wire 1 T! registers[1] [24] $end
$var wire 1 F! registers[0] [6] $end
$var wire 1 A! registers[0] [11] $end
$var wire 1 U! registers[1] [23] $end
$var wire 1 X! registers[1] [20] $end
$var wire 1 L! registers[0] [0] $end
$var wire 1 8! registers[0] [20] $end
$var wire 1 [! registers[1] [17] $end
$var wire 1 ]! registers[1] [15] $end
$var wire 1 C! registers[0] [9] $end
$var wire 1 E! registers[0] [7] $end
$var wire 1 ;! registers[0] [17] $end
$var wire 1 ?! registers[0] [13] $end
$upscope $end
$upscope $end
$scope module rv_imem $end
$var wire 1 " instr_mem[0] [7] $end
$var wire 1 # instr_mem[0] [6] $end
$var wire 1 $ instr_mem[0] [5] $end
$var wire 1 % instr_mem[0] [4] $end
$var wire 1 & instr_mem[0] [3] $end
$var wire 1 ' instr_mem[0] [2] $end
$var wire 1 ( instr_mem[0] [1] $end
$var wire 1 < instr_mem[3] [5] $end
$var wire 1 7 instr_mem[2] [2] $end
$var wire 1 . instr_mem[1] [3] $end
$var wire 1 1 instr_mem[1] [0] $end
$var wire 1 = instr_mem[3] [4] $end
$var wire 1 > instr_mem[3] [3] $end
$var wire 1 * instr_mem[1] [7] $end
$var wire 1 5 instr_mem[2] [4] $end
$var wire 1 D instr_mem[4] [5] $end
$var wire 1 G instr_mem[4] [2] $end
$var wire 1 I instr_mem[4] [0] $end
$var wire 1 K instr_mem[5] [6] $end
$var wire 1 Q instr_mem[5] [0] $end
$var wire 1 H instr_mem[4] [1] $end
$var wire 1 R instr_mem[6] [7] $end
$var wire 1 E instr_mem[4] [4] $end
$var wire 1 S instr_mem[6] [6] $end
$var wire 1 U instr_mem[6] [4] $end
$var wire 1 V instr_mem[6] [3] $end
$var wire 1 W instr_mem[6] [2] $end
$var wire 1 c instr_mem[8] [6] $end
$var wire 1 P instr_mem[5] [1] $end
$var wire 1 ` instr_mem[7] [1] $end
$var wire 1 C instr_mem[4] [6] $end
$var wire 1 e instr_mem[8] [4] $end
$var wire 1 , instr_mem[1] [5] $end
$var wire 1 + instr_mem[1] [6] $end
$var wire 1 / instr_mem[1] [2] $end
$var wire 1 4 instr_mem[2] [5] $end
$var wire 1 ) instr_mem[0] [0] $end
$var wire 1 9 instr_mem[2] [0] $end
$var wire 1 A instr_mem[3] [0] $end
$var wire 1 J instr_mem[5] [7] $end
$var wire 1 L instr_mem[5] [5] $end
$var wire 1 [ instr_mem[7] [6] $end
$var wire 1 ] instr_mem[7] [4] $end
$var wire 1 0 instr_mem[1] [1] $end
$var wire 1 f instr_mem[8] [3] $end
$var wire 1 g instr_mem[8] [2] $end
$var wire 1 a instr_mem[7] [0] $end
$var wire 1 B instr_mem[4] [7] $end
$var wire 1 F instr_mem[4] [3] $end
$var wire 1 8 instr_mem[2] [1] $end
$var wire 1 M instr_mem[5] [4] $end
$var wire 1 : instr_mem[3] [7] $end
$var wire 1 _ instr_mem[7] [2] $end
$var wire 1 ; instr_mem[3] [6] $end
$var wire 1 3 instr_mem[2] [6] $end
$var wire 1 O instr_mem[5] [2] $end
$var wire 1 ? instr_mem[3] [2] $end
$var wire 1 @ instr_mem[3] [1] $end
$var wire 1 Y instr_mem[6] [0] $end
$var wire 1 2 instr_mem[2] [7] $end
$var wire 1 T instr_mem[6] [5] $end
$var wire 1 X instr_mem[6] [1] $end
$var wire 1 - instr_mem[1] [4] $end
$var wire 1 N instr_mem[5] [3] $end
$var wire 1 \ instr_mem[7] [5] $end
$var wire 1 ^ instr_mem[7] [3] $end
$var wire 1 b instr_mem[8] [7] $end
$var wire 1 d instr_mem[8] [5] $end
$var wire 1 6 instr_mem[2] [3] $end
$var wire 1 h instr_mem[8] [1] $end
$var wire 1 Z instr_mem[7] [7] $end
$var wire 1 *! instr_mem[12] [1] $end
$var wire 1 q instr_mem[9] [0] $end
$var wire 1 z instr_mem[11] [7] $end
$var wire 1 #! instr_mem[11] [0] $end
$var wire 1 !! instr_mem[11] [2] $end
$var wire 1 r instr_mem[10] [7] $end
$var wire 1 (! instr_mem[12] [3] $end
$var wire 1 | instr_mem[11] [5] $end
$var wire 1 o instr_mem[9] [2] $end
$var wire 1 +! instr_mem[12] [0] $end
$var wire 1 n instr_mem[9] [3] $end
$var wire 1 x instr_mem[10] [1] $end
$var wire 1 k instr_mem[9] [6] $end
$var wire 1 l instr_mem[9] [5] $end
$var wire 1 w instr_mem[10] [2] $end
$var wire 1 t instr_mem[10] [5] $end
$var wire 1 j instr_mem[9] [7] $end
$var wire 1 &! instr_mem[12] [5] $end
$var wire 1 $! instr_mem[12] [7] $end
$var wire 1 v instr_mem[10] [3] $end
$var wire 1 ~ instr_mem[11] [3] $end
$var wire 1 i instr_mem[8] [0] $end
$var wire 1 %! instr_mem[12] [6] $end
$var wire 1 } instr_mem[11] [4] $end
$var wire 1 p instr_mem[9] [1] $end
$var wire 1 m instr_mem[9] [4] $end
$var wire 1 '! instr_mem[12] [4] $end
$var wire 1 y instr_mem[10] [0] $end
$var wire 1 s instr_mem[10] [6] $end
$var wire 1 )! instr_mem[12] [2] $end
$var wire 1 u instr_mem[10] [4] $end
$var wire 1 "! instr_mem[11] [1] $end
$var wire 1 { instr_mem[11] [6] $end
$upscope $end
$scope module rv_cpu $end
$scope module rv_regfile $end
$var wire 1 1# writeenable $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$dumpvars
#0
zE'
uU$
u)$
zL'
zY%
zM'
zo%
um$
u~#
u8#
12#
um#
u;#
u<#
u>#
uZ#
u1$
uj$
zN'
u_$
zI'
zO'
uw#
ue$
uq#
u%$
uW$
zH'
u-$
u{#
ui$
u[$
uv#
uh$
zT'
un#
u^$
u4$
z\'
u_#
zR'
ug$
zU'
u8$
ut$
uz$
u;$
u/$
u,$
u#$
zW'
zS'
u?$
u'$
u>$
uE$
u6#
zQ'
u|$
zZ'
u$$
uD$
uH#
u($
uI$
uu#
ul$
uy#
uz#
z['
un$
u-%
z^'
uq$
zX'
u!$
ux#
u&$
u6$
uG$
u2$
u:$
ut#
u"$
u(%
u@$
u|#
u+$
uQ#
ua$
u*$
ud$
us#
zV'
u3$
up$
u+%
u0$
u9$
u.$
u}#
zA%
uB$
z]'
zY'
zK%
u:#
u7$
uw$
u4#
uD#
uc$
uH$
ub$
ux$
u`$
z=%
zZ%
zB%
u/%
zM%
ua#
z\%
zc%
z9%
u$%
z;%
zC%
zg%
zW%
uO#
u*%
zD%
uc#
zH%
ze%
uO$
u'%
zI%
z^%
zV%
uR$
u,%
uJ$
uN#
z7%
zS%
uL$
u5%
uN$
x(&
z_%
zE%
zF%
u]#
u.%
u=#
0,!
ud#
z[%
zd%
z]%
u%%
zi%
zT%
zP%
zN%
u}$
zk%
uE#
uM$
zf%
zG%
uu$
zh%
zj%
z`%
uQ$
uG#
uv$
uT$
uf#
uK$
z?%
zL%
u!%
z:%
zJ%
z<%
zU%
u{$
zO%
ug#
zQ%
zR%
uP$
u&%
zX%
x&&
z>%
x"&
x|%
x8&
uF#
za%
uy$
u?#
uT#
z@%
zb%
uS$
u1%
z8%
zs%
u4%
x-&
x<&
u~$
x5&
u1#
ui#
x9&
u"%
x.&
x/&
zv%
x4&
u#%
zF&
x:&
uI#
uR#
zt%
zA&
u2%
x6&
x+&
zl%
u)%
zD&
z=&
x*&
uC#
zG&
u]$
u&'
x#&
zu%
u0%
zr%
zG'
zM&
x3&
u3%
uB#
u9#
x{%
uK#
uj#
u@#
zH&
u6%
x'&
zm%
x~%
x;&
x2&
zn%
uU#
z>&
zL&
x!&
zB&
zp%
z@&
x7&
zq%
uM#
u\#
z?&
zE&
x,&
zK&
x)&
x0&
zC&
zJ&
u^#
x1&
u5'
zP&
zI&
x}%
u-'
zW&
zN&
zO&
uX#
ub#
u7#
zY&
x%&
x$&
zQ&
zS&
zU&
uw%
uW#
z\&
zT&
z[&
ux%
uy%
u1'
zV&
zX&
uL#
u[#
zR&
u''
u.'
zZ&
uz%
u/'
u"'
u4'
uS#
u0'
z?'
uc&
u$'
ur$
u%'
un&
u;'
u2'
u3#
u:'
uJ#
u`#
uA#
u+'
u!'
u}&
u*'
u3'
u,'
u8'
ue#
u<'
u7'
u('
u)'
u6'
ur&
u>'
u='
uP#
uh#
u~&
uw&
uu&
u#'
u9'
uj&
ug&
u`&
uk#
uv&
zB'
u<$
ue&
ua&
us&
us$
zC'
ut&
u_&
up&
uX$
uV#
ur#
u5#
u{&
uh&
u=$
u|&
uf$
uo$
ud&
uo&
u5$
ub&
ui&
up#
uz&
uA$
ul&
uY$
u]&
uq&
uF$
u^&
zF'
uk$
uy&
ux&
uY#
uo#
uk&
zD'
z@'
uV$
uf&
u\$
uC$
um&
zK'
uZ$
zJ'
zA'
ul#
zP'
#1000
1Q
1E
1%
1I
1(
1H
15
1*
1U
1)
1e
14
1J
13
12
1d
1b
1h
1q
1i
1y
#40000000
0L$
00$
0t$
0e$
08#
0U$
0E'
0~#
0Y%
0)$
0L'
0m$
0M'
0o%
0w#
0>#
0<#
0m#
0;#
0O'
0j$
0Z#
01$
0I'
0N'
0_$
08$
0h$
0W$
0%$
0q#
0v#
0-$
0H'
0[$
0{#
0i$
0U'
0^$
0T'
0n#
0g$
04$
0R'
0\'
0_#
0+%
0n$
06#
0,$
0z$
0/$
0;$
0E$
0S'
0#$
0W'
0>$
0?$
0'$
0['
0D$
0Q'
0$$
0|$
0Z'
0z#
0I$
0H#
0($
0y#
0u#
0l$
0p$
0t#
0X'
0q$
0-%
0^'
0:$
0&$
0!$
0x#
02$
06$
0G$
03$
0|#
0@$
0"$
0(%
0V'
0a$
0+$
0Q#
0s#
0*$
0d$
0S%
0\%
0D#
0Y'
09$
0]'
0}#
0.$
0B$
0A%
04#
0K%
0w$
0:#
07$
0a#
0`$
0c$
0x$
0H$
0b$
0M%
0=%
0/%
0Z%
0B%
0c#
0C%
0;%
0c%
0$%
09%
0D%
0g%
0*%
0W%
0O#
0C#
0N#
0H%
0I%
07%
0e%
0'%
0O$
0J$
0^%
0,%
0V%
0P'
0R$
0d#
0E%
05%
0_%
0N$
0R%
1,!
0F%
0M$
0=#
0]#
0.%
0i%
0[%
0E#
0d%
0%%
0]%
0k%
0T%
0}$
0P%
0N%
0f#
0j%
0h%
0f%
0u$
0G%
0Q%
0T$
0`%
0v$
0Q$
0G#
0g#
0K$
0:%
0?%
0!%
0L%
0O%
0J%
0{$
0<%
0U%
0T#
0P$
0X%
0&%
0>%
0?#
0y$
0F#
0a%
x=&
0@%
0S$
0b%
04%
01%
0s%
08%
xD&
0#%
0i#
0~$
01#
0"%
0v%
0)%
0R#
xF&
0I#
0l%
xA&
0t%
02%
0l#
04'
xC&
0B#
xG&
0&'
0]$
03%
0r%
0u%
00%
0G'
xM&
0j#
09#
0K#
0m%
0@#
xH&
06%
x@&
0U#
0n%
0p%
x>&
xB&
xL&
0M#
0q%
xK&
0\#
x?&
xE&
0"'
xS&
xW&
0^#
xJ&
0-'
05'
xP&
xI&
xQ&
0X#
xN&
xO&
0b#
07#
xY&
0/'
01'
0W#
0w%
xU&
0y%
x\&
0x%
xT&
x[&
0z%
0L#
xV&
xX&
xZ&
0[#
0.'
xR&
0''
0A'
03'
02'
0?'
00'
0S#
0;'
0$'
0r$
0%'
0*'
0J#
03#
0:'
0}&
0`#
0!'
0A#
0+'
0e#
08'
0,'
06'
0<'
0)'
07'
0('
09'
0P#
0>'
0='
0#'
0h#
0~&
0J'
05$
0<$
0B'
0k#
0C'
0s$
0X$
05#
0V#
0r#
0=$
0o$
0f$
0Z$
0k$
0A$
0p#
0F'
0Y$
0F$
0K'
0D'
0Y#
0o#
0V$
0@'
0C$
0\$
#60000000
0A&
0*&
0(&
0<&
0|%
0"&
0&&
08&
0-&
0=&
05&
0D&
04&
09&
0.&
0/&
0F&
0:&
0+&
06&
0K&
0#&
0;&
0C&
03&
0G&
0~%
0{%
0M&
0'&
00&
02&
0@&
0H&
0!&
07&
0)&
0L&
0B&
0,&
0>&
0N&
0?&
01&
0W&
0E&
0S&
0}%
0J&
0Q&
0$&
0I&
0%&
0P&
0Z&
0U&
0O&
0Y&
0X&
0\&
0V&
0T&
0[&
0R&
#80000000
02#
1n#
1q#
1c#
0,!
1]#
1[#
1^#
1\#
1r#
#120000000
1,!
1-$
1+$
1,$
1u#
1y#
1($
1x#
1*$
15%
14%
13%
16%
1P#
#160000000
0,!
0\#
1j#
0[#
0]#
#200000000
0P#
05%
0,$
0+$
1}#
1O#
0*$
1t%
1s%
1v%
1,!
04%
1u%
03%
#220000000
1:&
1<&
19&
1;&
1[&
1\&
1Y&
1Z&
#240000000
1m#
0c#
0,!
1b#
0^#
1k#
#280000000
1P#
1~#
1'$
0($
1t#
0-$
0t%
0s%
06%
0u%
1='
1;'
1>'
1<'
1,!
#300000000
0Z&
0:&
0Y&
0[&
0;&
09&
#320000000
0n#
0m#
0r#
0k#
0,!
0q#
0j#
0b#
#360000000
1,!
0~#
1\'
1['
0'$
0P#
0u#
1^'
0y#
1]'
1N#
0}#
0t#
0O#
11#
0x#
0v%
0<'
0='
0;'
#380000000
0<&
0\&
#400000000
0,!
#440000000
1,!
0['
0\'
1P#
1I!
1K!
1J!
1L!
0]'
0>'
#480000000
0,!
#520000000
1,!
0^'
0P#
1O#
1."
#560000000
0,!
#600000000
1,!
1P#
01#
#640000000
0,!
#680000000
1,!
0P#
0N#
0O#
1M#
#720000000
0,!
#760000000
1,!
1P#
#800000000
0,!
#840000000
1,!
0P#
1O#
#880000000
0,!
#920000000
1,!
1P#
#960000000
0,!
#1000000000
1,!
0O#
0P#
1N#
#1040000000
0,!
#1080000000
1,!
1P#
#1120000000
0,!
#1160000000
1,!
0P#
1O#
#1200000000
0,!
#1240000000
1,!
1P#
#1280000000
0,!
#1320000000
1,!
0N#
0M#
0P#
0O#
1L#
#1360000000
0,!
#1400000000
1,!
1P#
#1440000000
0,!
#1480000000
1,!
0P#
1O#
#1520000000
0,!
#1560000000
1,!
1P#
#1600000000
